#注册中心
eureka:
  instance:
    prefer-ip-address: true
    hostname: exchange-registry
  client:
    service-url:
      defaultZone: http://root:root@exchange-registry:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

spring:
  redis:
    lettuce:
      pool:
        min-idle: 0
        max-active: 5000
        max-wait: 1000ms
        max-idle: 8
      shutdown-timeout: 100ms
    database: 0
    host: redis
    port: 6379
    password:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://mysql:3306/exchange?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: root
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        enabled: false
        url:
        username:
        password:
      # 初始连接数
      initial-size: 10
      # 最大连接池数量
      max-active: 100
      # 最小连接池数量
      min-idle: 10
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /monitor/druid/*
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

logging:
  level:
    org.springfromework.web: info

mybatis:
  mapper-locations: classpath:mapper/*.xml
  config-location: classpath:mybatis-config.xml

#ratelimit,规则：要是添加了@RouterLimit注解则按照注解规则来，否则按照此处配置，要是全都没有配置默认60s调用100次
ratelimit:
  period: 60  #时间间隔:s
  count: 500  # 调用次数

#logstash log
logger-info:
  logstash:
    enabled: false
    host: 127.0.0.1
    port: 7000
    queue-size: 512
    level: info
    keepAliveDuration: 300